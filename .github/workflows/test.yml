name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      libsql-server-release:
        description: "LibSQL Server Release"
        required: true
        default: "libsql-server-v0.24.32"

jobs:
  test:
    strategy:
      matrix:
        go-version: ["1.24"]
        include:
          - os: ubuntu-latest
            runs-on: ubuntu-latest
          - os: macos-latest
            runs-on: macos-latest
          - os: windows
            runs-on: [self-hosted, windows]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install sqld
        if: runner.os != 'Windows'
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/tursodatabase/libsql/releases/download/${{ github.event.inputs.libsql-server-release || 'libsql-server-v0.24.32' }}/libsql-server-installer.sh | sh
          echo "$HOME/.sqld/bin" >> $GITHUB_PATH
          sqld --version

      - name: Install sqld (Windows)
        if: matrix.os == 'windows'
        run: |
          # sqld not available for Windows, skip server tests
          echo "sqld installation skipped on Windows - no Windows binaries available"

      - name: Start sqld server
        if: matrix.os != 'windows'
        run: |
          sqld &
          while ! curl -s http://localhost:8080/health > /dev/null; do
            echo "Waiting for sqld..."
            sleep 1
          done
          echo "sqld is ready!"

      - name: Setup MinGW (Windows)
        if: matrix.os == 'windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-toolchain

      - name: Build
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            export PATH="/c/msys64/mingw64/bin:$PATH"
          fi
          go build -v ./...

      - name: Test
        if: matrix.os != 'windows'
        env:
          LIBSQL_PRIMARY_URL: "http://localhost:8080"
          LIBSQL_AUTH_TOKEN: ""
        run: go test -v ./...

      - name: Test (Windows)
        if: matrix.os == 'windows'
        env:
          CGO_ENABLED: 1
        run: |
          # Run build verification (no server required)
          if ($env:RUNNER_OS -eq "Windows") {
            $env:PATH = "/c/msys64/mingw64/bin;$env:PATH"
          }
          go build -v ./...
